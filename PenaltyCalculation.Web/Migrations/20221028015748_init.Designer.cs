// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PenaltyCalculation.Web.Data;

namespace PenaltyCalculation.Web.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221028015748_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PenaltyCalculation.Web.Data.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            Currency = "TR",
                            Name = "Turkey"
                        },
                        new
                        {
                            CountryId = 2,
                            Currency = "AE",
                            Name = "United Arab Emirates"
                        },
                        new
                        {
                            CountryId = 3,
                            Currency = "TW",
                            Name = "China "
                        },
                        new
                        {
                            CountryId = 4,
                            Currency = "DE",
                            Name = "German"
                        },
                        new
                        {
                            CountryId = 5,
                            Currency = "DK",
                            Name = "Denmark"
                        },
                        new
                        {
                            CountryId = 6,
                            Currency = "US",
                            Name = "UnitedState"
                        },
                        new
                        {
                            CountryId = 7,
                            Currency = "FR",
                            Name = "France"
                        },
                        new
                        {
                            CountryId = 8,
                            Currency = "IT",
                            Name = "Italy"
                        },
                        new
                        {
                            CountryId = 9,
                            Currency = "JP",
                            Name = "Japan"
                        },
                        new
                        {
                            CountryId = 10,
                            Currency = "KR",
                            Name = "Korea"
                        },
                        new
                        {
                            CountryId = 11,
                            Currency = "RU",
                            Name = "Russia"
                        },
                        new
                        {
                            CountryId = 12,
                            Currency = "IN",
                            Name = "India"
                        },
                        new
                        {
                            CountryId = 13,
                            Currency = "EG",
                            Name = "Egypt"
                        });
                });

            modelBuilder.Entity("PenaltyCalculation.Web.Data.Holiday", b =>
                {
                    b.Property<int>("HolidayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HolidayId");

                    b.HasIndex("CountryId");

                    b.ToTable("Holidays");

                    b.HasData(
                        new
                        {
                            HolidayId = 1,
                            CountryId = 1,
                            Date = new DateTime(2022, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Eid"
                        },
                        new
                        {
                            HolidayId = 2,
                            CountryId = 1,
                            Date = new DateTime(2022, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Eid"
                        },
                        new
                        {
                            HolidayId = 3,
                            CountryId = 1,
                            Date = new DateTime(2022, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Eid"
                        });
                });

            modelBuilder.Entity("PenaltyCalculation.Web.Data.Holiday", b =>
                {
                    b.HasOne("PenaltyCalculation.Web.Data.Country", "Country")
                        .WithMany("Holidays")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
